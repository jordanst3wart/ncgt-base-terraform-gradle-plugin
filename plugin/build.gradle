plugins {
    id 'groovy'
    id 'codenarc'
    id 'java-gradle-plugin'
    id 'org.asciidoctor.jvm.convert'
    id 'org.asciidoctor.editorconfig'
    id 'com.gradle.plugin-publish'
    id 'com.github.hierynomus.license'
}

apply from: rootProject.file('gradle/plugin-dev.gradle')
apply from: rootProject.file('gradle/codenarc.gradle')

pluginBundle {
    website = 'https://ysb33rOrg.gitlab.io/terraform-gradle-plugin'
    vcsUrl  = 'https://gitlab.com/ysb33rOrg/terraform-gradle-plugin.git'
    tags    = [
        'terraform', 'hashicorp',
        'amazon', 'aws',
        'cloudstack', 'digitalocean', 'openstack', 'google-cloud',
        'docker',
        'virtualbox','vmware', 'hyper-v', 'parallels', 'qemu', 'vsphere',
        'vagrant',
        'ansible', 'chef', 'powershell', 'salt',
        'gitlab'
    ]

    plugins {
        terraformBasePlugin {
            id = 'org.ysb33r.terraform.base'
            displayName = 'Terraform Base plugin'
            description = 'Provides Terraform extension and tasks. No need to have terraform installed as plugin will take care of caching and installation in a similar fashion as to have Gradle distributions are cached'
        }
        terraformPlugin {
            id = 'org.ysb33r.terraform'
            displayName = 'Terraform conventions plugin'
            description = 'Provides Terraform conventions, source sets and predefined tasks'
        }
        terraformRCPlugin {
            id = 'org.ysb33r.terraform.rc'
            displayName = 'Terraform Configuration (terraformrc) plugin'
            description = 'Deals specifically with the creation of terraformrc files'
        }
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
    jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED', '--add-opens=java.base/java.util=ALL-UNNAMED'
}

def githubUsername = System.getenv().get("GH_USERNAME")
/*
 * this is a github classic token that requires publishing permissions to write a new package
 */
def githubToken = System.getenv().get("GH_PACKAGES_TOKEN")


// publish to github
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jordanst3wart/gradle-terraform-plugin")
            credentials {
                username = githubUsername
                password = githubToken
            }
        }
    }
}
